name: CI/CD Pipeline

# Trigger configurations (choose as needed)
on:
  # Standard push/pull request triggers
  push:
    branches: [ "main", "dev" ] # Specify branches to trigger the workflow
    paths:
      - '**.java' # Trigger on changes to any Java files
      - 'pom.xml' # Trigger on changes to the Maven POM file
      - '.github/workflows/**' # Trigger on changes to workflow files
      - 'src/**' # Trigger on changes to source files

jobs:
  job1:
    runs-on: ubuntu-latest # Specify the runner environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Checkout the repository code

      - name: Set up JDK
        uses: actions/setup-java@v4 # Set up Java environment
        with:
          distribution: 'temurin' # Use Temurin distribution for Java
          java-version: '21' # Specify Java version
          cache: 'maven' # Enable caching for Maven dependencies

      - name: Build project
        run: mvn clean package # Build the Java project using Maven

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4 # Configure AWS credentials for subsequent steps
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Use secret for AWS access key ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Use secret for AWS secret access key
          aws-region: ap-south-1 # Specify the AWS region

      - name: Login to Amazon ECR
        id: login-ecr # Assign an ID to reference outputs later
        uses: aws-actions/amazon-ecr-login@v2 # Login to Amazon Elastic Container Registry

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }} # Use the registry output from the login step
          REPOSITORY: my-ecr-repo # Define your ECR repository name
          IMAGE_TAG: tag1 # Specify the image tag for the Docker image
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . # Build the Docker image with a specific tag
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG # Push the Docker image to Amazon ECR

